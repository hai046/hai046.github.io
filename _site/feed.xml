<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Private Blog</title>
    <description>Myself blog</description>
    <link>http://www.denghaizhu.com/</link>
    <atom:link href="http://www.denghaizhu.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 30 Sep 2015 18:22:11 +0800</pubDate>
    <lastBuildDate>Wed, 30 Sep 2015 18:22:11 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>ganglia 安装</title>
        <description>&lt;h1 id=&quot;ganglia&quot;&gt;ganglia配置&lt;/h1&gt;

&lt;p&gt;###服务端 ganglia&lt;br /&gt;
命令：&lt;br /&gt;
&lt;code&gt;yum install ganglia ganglia-gmetad ganglia-web ganglia-gmond&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改配置&lt;br /&gt;
&lt;code&gt;/etc/ganglia/gmetad.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改文件/etc/ganglia/gmetad.conf&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;data_source “jiemo_ganglia_cluster” localhost&lt;br /&gt;
setuid_username ganglia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;rrds&quot;&gt;创建rrds目录&lt;/h3&gt;
&lt;p&gt;mkdir -p /var/lib/ganglia/rrds&lt;br /&gt;
  chown ganglia:ganglia /var/lib/ganglia/rrds&lt;br /&gt;
  chmod a+w /var/lib/ganglia/rrds&lt;/p&gt;

&lt;p&gt;###客户端 ganglia-gmond&lt;/p&gt;

&lt;p&gt;命令：&lt;br /&gt;
&lt;code&gt;yum install ganglia ganglia-gmond&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改配置&lt;br /&gt;
&lt;code&gt;vim /etc/ganglia/gmond.conf&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;#1,修改名字&lt;br /&gt;
cluster {&lt;br /&gt;
  name = “JiemoApp-ganglia”&lt;br /&gt;
  }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#2修改描述&lt;br /&gt;
host {&lt;br /&gt;
        location = “grape”&lt;br /&gt;
    }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#3 修改发送到服务器的配置&lt;br /&gt;
udp_send_channel {&lt;br /&gt;
  host=10.44.138.0&lt;br /&gt;
  port = 8649&lt;br /&gt;
  ttl = 1&lt;br /&gt;
 }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;#4接收配置&lt;br /&gt;
udp_recv_channel {&lt;br /&gt;
  port = 8649&lt;br /&gt;
  }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;####启动&lt;br /&gt;
&lt;code&gt;service gmond start//启动
    service gmond status//查看状态&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;##参考资料&lt;br /&gt;
&amp;gt;1. 安装php支持&lt;br /&gt;
 yum install php-common php-cli php-gb php&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;安装ganglia及其相关组件&lt;br /&gt;
server端：yum install rrdtool rrdtool-devel ganglia-web ganglia-gmetad ganglia-gmond ganglia-gmond-python httpd apr-devel zlib-devel libconfuse-devel expat-devel pcre-devel &lt;br /&gt;
client端：yum install ganglia-gmond&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;相关配置&lt;br /&gt;
  修改/etc/ganglia/gmond.conf&lt;br /&gt;
 cluster {&lt;br /&gt;
name = “Cynric”  //这个是整个集群的名字&lt;br /&gt;
 }&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;dup_send_channel {&lt;br /&gt;
  host = 127.0.0.1  // host为单播模式  mcast_join为多播模式&lt;br /&gt;
 }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;udp_recv_channel {&lt;br /&gt;
  port = 8649   // 如果是用单播模式则要删除mcast_join和bind两个选项&lt;br /&gt;
 }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;客户端&lt;br /&gt;
 修改文件/etc/ganglia/gmetad.conf&lt;br /&gt;
 data_source “jiemoapp_ganglia” localhost   //Cynric是gmond.conf中cluster里name的名字  localhost则需要是服务器端的ip&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;setuid_username “ganglia”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;创建rrds目录&lt;br /&gt;
  mkdir -p /var/lib/ganglia/rrds&lt;br /&gt;
  chown ganglia:ganglia /var/lib/ganglia/rrds&lt;br /&gt;
  chmod a+w /var/lib/ganglia/rrds&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;关闭SELinux不然无法访问监控的web的页面&lt;br /&gt;
vi /etc/selinux/config&lt;br /&gt;
SELINUX=disable&lt;br /&gt;
以上方法需要重启机器&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;可以在终端上直接输入setenforce 0即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;启动相关服务&lt;br /&gt;
service gmond restart&lt;br /&gt;
service gmetad restart&lt;br /&gt;
service httpd restart&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;浏览器中输入127.0.0.1/ganglia检验是否成功&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;遇到相关问题请查看http://blog.csdn.net/cybercode/article/details/6210444&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 30 Sep 2015 23:43:36 +0800</pubDate>
        <link>http://www.denghaizhu.com/2015/09/30/ganlia-install.html</link>
        <guid isPermaLink="true">http://www.denghaizhu.com/2015/09/30/ganlia-install.html</guid>
        
        
      </item>
    
      <item>
        <title>Android opengl es gpuimage convert</title>
        <description>&lt;h1 id=&quot;android-opengl-es-gpuimage-convert-yuv-to-rgb&quot;&gt;Android OpenGL es GPUImage convert YUV to RGB&lt;/h1&gt;

&lt;p&gt;Android OpenGL-ES GPUImage&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;##1，YUV转RGB&lt;br /&gt;
 andorid  的camera数据是YUV数据，需要转换成rgb，但是普通的转换效率不高，即使使用jni转换也依然如此&lt;/p&gt;

&lt;p&gt;修改fragment shader脚本如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    varying highp vec2 textureCoordinate;
    uniform sampler2D inputImageTexture;
    uniform sampler2D uvTexture;
    precision mediump float;
    void main(){
         vec4 y = vec4((texture2D(inputImageTexture, textureCoordinate).r - 16./255.) * 1.164);  
         vec4 u = vec4(texture2D(uvTexture, textureCoordinate).a - 128./255.);  
        vec4 v = vec4(texture2D(uvTexture, textureCoordinate).r - 128./255.);  
        y += v * vec4(1.596, -0.813, 0, 0);
        y += u * vec4(0, -0.392, 2.017, 0); 
        y.a = 1.0;
        gl_FragColor = y;//texture2D(inputImageTexture, textureCoordinate);
               }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是是关键代码 YUV数据转换成RGBA&lt;br /&gt;
### 2，坐标转换 &lt;br /&gt;
坐标转换 例如平移缩放旋转等&lt;br /&gt;
坐标脚本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    VERTEX_SHADER = &quot;uniform mat4 uMVPMatrix;\n&quot;
                + &quot;attribute vec4 position;\n&quot; + &quot;attribute vec4 inputTextureCoordinate;\n&quot; + &quot; \n&quot;
                + &quot;varying vec2 textureCoordinate;\n&quot; + &quot; \n&quot; + &quot;void main()\n&quot; + &quot;{\n&quot;
                + &quot;    gl_Position = uMVPMatrix * position; \n&quot;
                + &quot;    textureCoordinate = inputTextureCoordinate.xy;\n&quot; + &quot;}&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;多添加了uMVPMatrix  &lt;/p&gt;

&lt;p&gt;Matrix.frustumM(mProjMatrix, 0, -ratio, ratio, -1, 1, 1, 2);&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    Matrix.setLookAtM(mVMatrix, 0,//
            0, 0, cameraId == Camera.CameraInfo.CAMERA_FACING_FRONT ? -1 : 1, //eye
            0f, 0f, 0f,//center
            0f, 1f, 0f//up
    );
    //eye 坐标的eyez 正值时候看到的景物是折叠的

    float y = ((maxHeight - height) / 1f / maxHeight);
    Matrix.translateM(mVMatrix, 0,//
            0, y, 0f//x,y,z
    );

    Matrix.rotateM(mVMatrix, 0, mRotation.asInt(), 0, 0, -1);
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 30 Sep 2015 00:00:00 +0800</pubDate>
        <link>http://www.denghaizhu.com/2015/09/30/Android%20OpenGL%20es%20GPUImage%20convert.html</link>
        <guid isPermaLink="true">http://www.denghaizhu.com/2015/09/30/Android%20OpenGL%20es%20GPUImage%20convert.html</guid>
        
        
      </item>
    
      <item>
        <title>home</title>
        <description>&lt;h1 id=&quot;home&quot;&gt;home&lt;/h1&gt;
</description>
        <pubDate>Tue, 01 Sep 2015 00:00:00 +0800</pubDate>
        <link>http://www.denghaizhu.com/2015/09/01/home.html</link>
        <guid isPermaLink="true">http://www.denghaizhu.com/2015/09/01/home.html</guid>
        
        
      </item>
    
  </channel>
</rss>
